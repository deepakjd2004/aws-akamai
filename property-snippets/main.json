{
    "rules": {
        "name": "default",
        "children": [
            "#include:Offload_origin.json",
            "#include:Minimize_payload.json"
        ],
        "behaviors": [
            {
                "name": "origin",
                "options": {
                    "cacheKeyHostname": "REQUEST_HOST_HEADER",
                    "compress": true,
                    "enableTrueClientIp": false,
                    "forwardHostHeader": "ORIGIN_HOSTNAME",
                    "hostname": "${env.origin_value}",
                    "httpPort": 80,
                    "httpsPort": 443,
                    "originCertificate": "",
                    "originSni": true,
                    "originType": "CUSTOMER",
                    "ports": "",
                    "verificationMode": "PLATFORM_SETTINGS"
                }
            },
            {
                "name": "cpCode",
                "options": {
                    "value": {
                        "id": "${env.cpcode_value}"
                    }
                }
            },
            {
                "name": "allowPost",
                "options": {
                    "allowWithoutContentLength": true,
                    "enabled": true
                }
            },
            {
                "name": "realUserMonitoring",
                "options": {
                    "enabled": true
                }
            },
            {
                "name": "setVariable",
                "options": {
                    "extractLocation": "CLIENT_REQUEST_HEADER",
                    "headerName": "api-key",
                    "transform": "NONE",
                    "valueSource": "EXTRACT",
                    "variableName": "PMUSER_API_KEY_VALUE"
                }
            },
            {
                "name": "rapid",
                "options": {
                    "enabled": true
                }
            }
        ],
        "options": {},
        "variables": [
            {
                "name": "PMUSER_API_KEY_VALUE",
                "value": null,
                "description": null,
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_KEY_HEADER",
                "value": "key_header",
                "description": null,
                "hidden": false,
                "sensitive": false
            },
            {
                "name": "PMUSER_UUID_FINAL",
                "value": null,
                "description": "Variable to hold UUID value",
                "hidden": false,
                "sensitive": false
            }
        ],
        "advancedOverride": "<!-- advanced tags -->\n             <!-- Generates UID as per version 4 standard -->\n                        <!-- Version 4 UUIDs have the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx where x is any hexadecimal digit and y is one of 8, 9, a, or b -->\n                            <assign:variable>\n                                <name>UID_PART_1</name>\n                                <hidden>on</hidden>\n                                <transform>\n                                    <hexrand>\n                                        <bytes>4</bytes>\n                                    </hexrand>\n                                </transform>\n                            </assign:variable>\n                            <assign:variable>\n                                <name>UID_PART_2</name>\n                                <hidden>on</hidden>\n                                <transform>\n                                    <hexrand>\n                                        <bytes>2</bytes>\n                                    </hexrand>\n                                </transform>\n                            </assign:variable>\n                            <assign:variable>\n                                <name>UID_PART_3</name>\n                               <hidden>on</hidden>\n                                <transform>\n                                    <hexrand>\n                                        <bytes>2</bytes>\n                                    </hexrand>\n                                    <substring>\n                                        <start>1</start>\n                                        <end>-1</end>\n                                    </substring>\n                                </transform>\n                            </assign:variable>\n                            <assign:variable>\n                                <name>UID_PART_4</name>\n                               <hidden>on</hidden>\n                                <transform>\n                                    <hexrand>\n                                        <bytes>2</bytes>\n                                    </hexrand>\n                                    <substring>\n                                        <start>1</start>\n                                        <end>-1</end>\n                                    </substring>\n                                </transform>\n                            </assign:variable>\n                            <assign:variable>\n                                <name>UID_PART_5</name>\n                                <hidden>on</hidden>\n                                <transform>\n                                    <hexrand>\n                                        <bytes>6</bytes>\n                                    </hexrand>\n                                </transform>\n                            </assign:variable>\n                            <!-- UID_RAND_89ab is used to select the y character of UID which can be 8,9,a or b-->\n                            <assign:variable>\n                                <name>UID_RAND_89ab</name>\n                                <hidden>on</hidden>\n                                <transform>\n                                    <rand>\n                                        <min>0</min>\n                                        <max>3</max>\n                                    </rand>\n                                </transform>\n                            </assign:variable>\n                            <match:variable name=\"UID_RAND_89ab\" value=\"0\">\n                                <assign:variable>\n                                    <name>UID_SELECTED_CHAR</name>\n                                    <value>8</value>\n                                    <hidden>on</hidden>\n                                </assign:variable>\n                            </match:variable>\n                            <match:variable name=\"UID_RAND_89ab\" value=\"1\">\n                                <assign:variable>\n                                    <name>UID_SELECTED_CHAR</name>\n                                    <value>9</value>\n                                    <hidden>on</hidden>\n                                </assign:variable>\n                            </match:variable>\n                            <match:variable name=\"UID_RAND_89ab\" value=\"2\">\n                                <assign:variable>\n                                    <name>UID_SELECTED_CHAR</name>\n                                    <value>a</value>\n                                    <hidden>on</hidden>\n                                </assign:variable>\n                            </match:variable>\n                            <match:variable name=\"UID_RAND_89ab\" value=\"3\">\n                                <assign:variable>\n                                    <name>UID_SELECTED_CHAR</name>\n                                    <value>b</value>\n                                    <hidden>on</hidden>\n                                </assign:variable>\n                            </match:variable>\n                            <!--Assemble all the UID parts to form the final UID value -->\n                            <assign:variable>\n                                <name>PMUSER_UUID_FINAL</name>\n                                <value>%(UID_PART_1)-%(UID_PART_2)-4%(UID_PART_3)-%(UID_SELECTED_CHAR)%(UID_PART_4)-%(UID_PART_5)</value>\n                        </assign:variable>\n<!-- Add UUID Header to outgoing request to Origin -->\n<edgeservices:modify-outgoing-request.add-header>\n    <status>on</status>\n    <name>X-UUID</name>\n    <value>%(PMUSER_UUID_FINAL)</value>\n  </edgeservices:modify-outgoing-request.add-header>\n\n        <comment:note value=\"turn on request body inspection\"/>\n        <edgeservices:inspect-request-body.status>on</edgeservices:inspect-request-body.status>\n        <edgeservices:inspect-request-body.limit>128KB</edgeservices:inspect-request-body.limit>\n        <edgeservices:inspect-request-body.free-body-early>off</edgeservices:inspect-request-body.free-body-early>\n        <comment:note value=\"End Feature advanced\"/>\n        <comment:note value=\"Start API Extraction ONLY for POST body requests and NOT for api-keys in a header\"/>\n        <match:request.header name=\"%(PMUSER_KEY_HEADER)\" result=\"false\">\n           <match:variable name=\"AK_QUERY\" result=\"false\">\n            <match:request.method result=\"true\" value=\"POST\">\n                <match:metadata-stage value=\"client-request-body\">\n                    <match:regex flags=\"s\" impl=\"re2\" regex=\"(.*)\" select=\"XML_PAIRS://apikey\" strict-err-check-re2=\"on\">\n                        <assign:variable>\n                            <name>PMUSER_API_KEY_VALUE</name>\n                            <value>%(AK_SELECT)</value>\n                        </assign:variable>\n                    </match:regex>\n                    <comment:note value=\"End API Extraction\"/>\n                    <!-- enable IPA processing to a different trees -->\n                    <match:request.header name=\"X-Akamai-Processing-Agent\" result=\"false\">\n                        <match:variable name=\"AK_QUERY\" result=\"false\">\n                            <edgeservices:processing-agent>\n                                <status>on</status>\n                                <log-r-line>on</log-r-line>\n                                <url>%(AK_URL)?api_key=%(PMUSER_API_KEY_VALUE)</url>\n                                <host>failover.dj.config.rapid.com.co</host>\n                                <authenticate>off</authenticate>\n                                <post-body/>\n                            </edgeservices:processing-agent>\n                        </match:variable>\n                        <match:variable name=\"AK_QUERY\">\n                            <edgeservices:processing-agent>\n                                <status>on</status>\n                                <log-r-line>on</log-r-line>\n                                <url>%(AK_URL)&amp;api_key=%(PMUSER_API_KEY_VALUE)</url>\n                                <host>failover.dj.config.rapid.com.co</host>\n                                <authenticate>off</authenticate>\n                                <post-body/>\n                            </edgeservices:processing-agent>\n                        </match:variable>\n                    </match:request.header>\n                </match:metadata-stage>\n            </match:request.method>\n          </match:variable>\n        </match:request.header>\n\n<!-- Add APIkey Header to outgoing request to Origin -->\n<match:metadata-stage value=\"client-request\">\n<edgeservices:modify-outgoing-request.add-header>\n    <status>on</status>\n    <name>apikey</name>\n    <value>%(PMUSER_API_KEY_VALUE)</value>\n  </edgeservices:modify-outgoing-request.add-header>\n</match:metadata-stage>\n\n\n\n        <!-- Check what response we got from content server for IPA authorization request and set variables for later processing -->\n        <match:processing-agent-response host=\"failover.dj.config.rapid.com.co\">\n            <match:response.status result=\"true\" value=\"401\">\n                <assign:variable>\n                    <name>DENY</name>\n                    <value>true</value>\n                </assign:variable>\n                <assign:variable>\n                    <name>STS_CD</name>\n                    <value>401</value>\n                </assign:variable>\n            </match:response.status>\n            <match:response.status result=\"true\" value=\"403\">\n                <assign:variable>\n                    <name>DENY</name>\n                    <value>true</value>\n                </assign:variable>\n                <assign:variable>\n                    <name>STS_CD</name>\n                    <value>403</value>\n                </assign:variable>\n            </match:response.status>\n        </match:processing-agent-response>\n        <!-- Deny the client request for content if we got 401 response from origin for IPA authorization request -->\n        <match:metadata-stage value=\"ipa-response\">\n            <match:variable name=\"DENY\" value=\"true\">\n                <assign:extract-value>\n                    <variable-name>GWERR_FROM_IPA</variable-name>\n                    <location>IPA_Response_Header</location>\n                    <location-id>dummy-header</location-id>\n                </assign:extract-value>\n            </match:variable>\n            <!-- Deny the request if API-GW/IPA is a auth deny -->\n            <match:variable name=\"DENY\" value=\"true\">\n                <auth:acl.deny>API-GW-Fail</auth:acl.deny>\n            </match:variable>\n            <!-- add IPA response body  -->\n            <match:response.status result=\"true\" value=\"401\">\n                <edgeservices:construct-abort-response>\n                    <status>on</status>\n                    <http-status>401</http-status>\n                    <body>%(GWERR_FROM_IPA)</body>\n                </edgeservices:construct-abort-response>\n            </match:response.status>\n            <match:response.status result=\"true\" value=\"403\">\n                <edgeservices:construct-abort-response>\n                    <status>on</status>\n                    <http-status>403</http-status>\n                    <body>%(GWERR_FROM_IPA)</body>\n                </edgeservices:construct-abort-response>\n            </match:response.status>\n        </match:metadata-stage>",
        "comments": "The Default Rule template contains all the necessary and recommended behaviors. Rules are evaluated from top to bottom and the last matching rule wins."
    }
}
